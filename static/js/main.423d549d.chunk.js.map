{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","style","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","toggle","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","settext","Fragment","color","heading","placeholder","value","onChange","event","target","rows","newtext","toUpperCase","toLowerCase","trim","split","filter","element","length","Alert","height","alert","class","word","lower","charAt","slice","capitalize","msg","App","setstyle","_useState3","_useState4","setAlert","showalert","message","setTimeout","document","body","backgroundColor","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.423d549d.chunk.js","sourcesContent":["\r\nimport React from \"react\"\r\n// import { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.style} bg-${props.style}`}>\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"\">About</a>\r\n                    </li> */}\r\n\r\n\r\n                </ul>\r\n                <div className={`container my-3- ${ props.style==='light'? 'dark':'light'}`}>\r\n                <div className=\"custom-control custom-switch\">\r\n                    <input type=\"checkbox\" className=\"custom-control-input\" onClick={props.toggle} id=\"customSwitch1\" />\r\n                    <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">enable mode</label>\r\n                </div>\r\n            </div>\r\n                {/* <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\"  type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={search} type=\"submit\">Search</button>\r\n                </form> */}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import { click } from '@testing-library/user-event/dist/click'\r\nimport React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleclickuc = () => {\r\n        let newtext = text.toUpperCase()\r\n        settext(newtext)\r\n    }\r\n    const handleclicklc = () => {\r\n        let newtext = text.toLowerCase()\r\n        settext(newtext)\r\n    }\r\n    const clear = () => {\r\n        // if (settext.value == ('')) {\r\n        //     alert(\"clear\")\r\n        // }\r\n        let newtext = ''\r\n        settext(newtext)\r\n    }\r\n    const handleclicktrim = () => {\r\n        let newtext = text.trim()\r\n        // if (text.split(' ') == text.split('')) { \r\n        settext(newtext)\r\n\r\n    }\r\n    // const search = () => {\r\n    //     let newtext = text.search(text)\r\n    //     settext(newtext)\r\n\r\n    // }\r\n\r\n    const handle = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n\r\n\r\n    const [text, settext] = useState('');\r\n    return (\r\n        <>\r\n            {/* <form className=\"form-inline my-2 my-lg-0\">\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={search} >Search</button>\r\n            </form> */}\r\n            <form>\r\n                <div className=\"form-group\" style={{ color: props.style === 'light' ? 'black' : 'white    ' }}>\r\n                    <h1> <label htmlFor=\"exampleFormControlTextarea1\">{props.heading}</label></h1>\r\n                    <textarea className=\"form-control\" placeholder='Enter the text' value={text} onChange={handle} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n                </div>\r\n                <button type=\"button\" onClick={handleclickuc} className=\"btn btn-primary mx-2 my-2 \">convert to UPPERCASE</button>\r\n                <button type=\"button\" onClick={handleclicklc} className=\"btn btn-primary mx-2 my-2\">convert to lowercase</button>\r\n                <button type=\"button\" onClick={handleclicktrim} className=\"btn btn-primary mx-2 my-2\">Space Trim</button>\r\n                <button type=\"button\" onClick={clear} className=\"btn btn-primary mx-2 my-2\">Clear</button>\r\n\r\n            </form>\r\n            <div className='container my-5' style={{ color: props.style === 'light' ? 'black' : 'white    ' }}>\r\n                <h1>Summary</h1>\r\n                <p>{text.split(' ').filter((element)=>element.length!==0).length} word and {text.length} character</p>\r\n                {/* <p>{text===\"\"?\"0\":text.trim().split(' ').length} word and {text.length} character</p> */}\r\n                <p>{0.008 * text.split(' ').filter((element)=>element.length!==0).length} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : 'Enter the text to preview it'}</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{ height: \"50px\" }} >\r\n        {\r\n            props.alert && <div class={`alert alert-${props.alert.type} role=\"alert`}>\r\n                {capitalize(props.alert.type)}: {props.alert.msg}\r\n            </div>\r\n        }\r\n        </ div>\r\n            )\r\n}\r\n\r\n            export default Alert","// import logo from './logo.svg';\nimport './App.css';\nimport About from './component/About';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [style, setstyle] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n\n\n  const toggle = () => {\n    if (style === 'light') {\n      setstyle('dark')\n      document.body.style.backgroundColor = 'black'\n      showalert('Dark mode is enabled ', 'success')\n    }\n    else {\n      setstyle('light')\n      document.body.style.backgroundColor = 'white'\n      showalert('Light mode is enabled', 'success')\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar style={style} toggle={toggle} title= 'Textutils'  />\n        <Alert alert={alert} />\n        {/* <Switch>\n          <Route exact path=\"/about\">\n            <About/>\n          </Route>\n          <Route exact path=\"/\"> */}\n            <div className=\"container\">\n              <Textform heading=\"converter\" style={style} />\n            </div>\n          {/* </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}